definitions:
  client_service.Client:
    properties:
      additional_phone_number:
        type: string
      address:
        type: string
      created_at:
        type: string
      driving_license_number:
        type: string
      driving_number_expired:
        type: string
      driving_number_given_date:
        type: string
      driving_number_given_place:
        type: string
      first_name:
        type: string
      id:
        type: string
      is_blocked:
        type: boolean
      last_name:
        type: string
      passport_number:
        type: string
      passport_pinfl:
        type: string
      phone_number:
        type: string
      photo:
        type: string
      propiska:
        type: string
      updated_at:
        type: string
    type: object
  client_service.CreateClient:
    properties:
      additional_phone_number:
        type: string
      address:
        type: string
      driving_license_number:
        type: string
      driving_number_expired:
        type: string
      driving_number_given_date:
        type: string
      driving_number_given_place:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      passport_number:
        type: string
      passport_pinfl:
        type: string
      phone_number:
        type: string
      photo:
        type: string
      propiska:
        type: string
    type: object
  client_service.CreateOTP:
    properties:
      phone_number:
        type: string
    type: object
  client_service.GetListClientResponse:
    properties:
      clients:
        items:
          $ref: '#/definitions/client_service.Client'
        type: array
      count:
        type: integer
    type: object
  client_service.UpdateClient:
    properties:
      additional_phone_number:
        type: string
      address:
        type: string
      driving_license_number:
        type: string
      driving_number_expired:
        type: string
      driving_number_given_date:
        type: string
      driving_number_given_place:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      passport_number:
        type: string
      passport_pinfl:
        type: string
      phone_number:
        type: string
      photo:
        type: string
      propiska:
        type: string
    type: object
  http.Response:
    properties:
      data: {}
      description:
        type: string
      status:
        type: string
    type: object
  models.UpdatePatch:
    properties:
      data:
        additionalProperties: true
        type: object
      id:
        type: string
    type: object
  order_service.CreateOrder:
    properties:
      car_id:
        type: string
      client_id:
        type: string
      day_count:
        type: integer
      discount:
        type: string
      is_paid_date:
        type: string
      mechanic_id:
        type: string
      miliage:
        type: integer
      paid_price:
        type: number
      start_date:
        type: string
      status:
        type: boolean
      tarif_id:
        type: string
      total_price:
        type: number
    type: object
  order_service.GetListOrderResponse:
    properties:
      count:
        type: integer
      orders:
        items:
          $ref: '#/definitions/order_service.Order'
        type: array
    type: object
  order_service.Order:
    properties:
      car_id:
        type: string
      client_id:
        type: string
      created_at:
        type: string
      day_count:
        type: integer
      discount:
        type: string
      id:
        type: string
      is_paid_date:
        type: string
      mechanic_id:
        type: string
      miliage:
        type: integer
      order_number:
        type: string
      paid_price:
        type: number
      start_date:
        type: string
      status:
        type: boolean
      tarif_id:
        type: string
      total_price:
        type: number
      updated_at:
        type: string
    type: object
  order_service.UpdateOrder:
    properties:
      car_id:
        type: string
      client_id:
        type: string
      day_count:
        type: integer
      discount:
        type: string
      id:
        type: string
      is_paid_date:
        type: string
      miliage:
        type: integer
      order_number:
        type: string
      paid_price:
        type: number
      start_date:
        type: string
      status:
        type: boolean
      tarif_id:
        type: string
      total_price:
        type: number
    type: object
info:
  contact: {}
paths:
  /check:
    get:
      consumes:
      - application/json
      description: Verify OTP
      operationId: verify_otp
      parameters:
      - description: otp_code
        in: query
        name: otp_code
        required: true
        type: string
      - description: phone_number
        in: query
        name: phone_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OTP
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Verify OTP
      tags:
      - OTP
    post:
      consumes:
      - application/json
      description: Create OTP
      operationId: create_otp
      parameters:
      - description: CreateOTPRequestBody
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/client_service.CreateOTP'
      produces:
      - application/json
      responses:
        "200":
          description: OTP
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create OTP
      tags:
      - OTP
  /client:
    get:
      consumes:
      - application/json
      description: Get Client List
      operationId: get_client_list
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetAllClientResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/client_service.GetListClientResponse'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Client List
      tags:
      - Client
  /client/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Client
      operationId: delete_client
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Client data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Client
      tags:
      - Client
    get:
      consumes:
      - application/json
      description: Get Client By ID
      operationId: get_client_by_id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Client
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/client_service.Client'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Client By ID
      tags:
      - Client
    patch:
      consumes:
      - application/json
      description: Patch Client
      operationId: patch_client
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdatePatchRequestBody
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePatch'
      produces:
      - application/json
      responses:
        "200":
          description: Client data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/client_service.Client'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Patch Client
      tags:
      - Client
    put:
      consumes:
      - application/json
      description: Update Client
      operationId: update_client
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateClientRequestBody
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/client_service.UpdateClient'
      produces:
      - application/json
      responses:
        "200":
          description: Client data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/client_service.Client'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Client
      tags:
      - Client
  /order:
    get:
      consumes:
      - application/json
      description: Get Order List
      operationId: get_order_list
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetAllOrderResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/order_service.GetListOrderResponse'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Order List
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: Create Order
      operationId: create_order
      parameters:
      - description: CreateOrderRequestBody
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/order_service.CreateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: GetOrderBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/order_service.Order'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Order
      tags:
      - Order
  /order/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Order
      operationId: delete_order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Order
      tags:
      - Order
    get:
      consumes:
      - application/json
      description: Get Order By ID
      operationId: get_order_by_id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OrderBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/order_service.Order'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Order By ID
      tags:
      - Order
    patch:
      consumes:
      - application/json
      description: Patch Order
      operationId: patch_order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdatePatchRequestBody
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePatch'
      produces:
      - application/json
      responses:
        "200":
          description: Order data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/order_service.Order'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Patch Order
      tags:
      - Order
    put:
      consumes:
      - application/json
      description: Update Order
      operationId: update_order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateOrderRequestBody
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/order_service.UpdateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: order data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/order_service.Order'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Order
      tags:
      - Order
  /user:
    post:
      consumes:
      - application/json
      description: Create User
      operationId: create_user
      parameters:
      - description: CreateClient
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/client_service.CreateClient'
      produces:
      - application/json
      responses:
        "200":
          description: GetUserBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/client_service.Client'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create User
      tags:
      - User
swagger: "2.0"
